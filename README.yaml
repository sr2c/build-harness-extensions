---
name: build-harness-extensions
tags:
  - build-harness
  - readme
  - meta
categories:
  - build-harness/supported
license: BSD2
gitlab_repo: sr2c/build-harness-extensions
description: |-
  Our extensions to Cloud Posse's
  [build-harness](https://github.com/cloudposse/build-harness).
  Cloud Posse have made a great collection of Makefiles to facilitate building
  Golang projects, Dockerfiles, Helm charts, and more. At SR2 Communications,
  our technologies sometimes differ from Cloud Posse's choice and sometimes
  they're the same.
  That's why we're grateful that they've built us a way to add extensions to
  their framework to benefit from the existing collection while also being able
  to work with the technologies that we work with every day.
  
  Our primary technologies are:
  
  * Ansible
  * Docker Compose (existing Cloud Posse module)
  * GitLab
  * Python
  * Terraform (existing Cloud Posse module)
usage: |-
  
  ### Simple usage
  
  Add a Makefile to the project like:
  
  ```make
  SHELL := /bin/bash

  export README_TEMPLATE_FILE ?= \
      build-harness-extensions/templates/README.md.gotmpl

  -include $(shell curl -sSL -o .build-harness-ext \
      "https://go.sr2.uk/build-harness"; echo .build-harness-ext)
  ```
  
  ### Ansible collection
  
  You can add additional variables to adjust the behaviour of the targets, for
  an Ansible module for example:
  
  ```make
  SHELL := /bin/bash
  
  export README_TEMPLATE_FILE ?= \
      $(BUILD_HARNESS_EXTENSIONS_PATH)/templates/README.md.gotmpl
  
  export README_DEPS ?= docs/ansible.md docs/targets.md
  
  -include $(shell curl -sSL -o .build-harness-ext \
      "https://go.sr2.uk/build-harness"; echo .build-harness-ext)
  ```
  
  ### Ansible role
  
  You do not need to add a complete new Makefile for an Ansible role that is part
  of a collection, simply add a Makefile to include the Makefile of the
  collection:
  
  ```make
  include ../../Makefile
  ```
  
  build-harness will automatically discover the path for the build-harness and
  build-harness-extensions directories.
  
  ### Terraform module

  Project specific targets may be added to the Makefile. Document the additional
  targets using two # signs to have the target automatically documented in the
  README.
  Use the HELP_FILTER variable to limit the help target to showing only the
  relevant targets for the project:

  ```make
  SHELL := /bin/bash
  
  export HELP_FILTER ?= help|terraform|tflint|lint
  export README_TEMPLATE_FILE ?= \
    build-harness-extensions/templates/README.md.gotmpl
  
  ifneq ("$(wildcard context.tf)", "")
    export README_DEPS ?= docs/targets.md docs/terraform-split.md
  else
    export README_DEPS ?= docs/targets.md docs/terraform.md
  endif
  
  ifneq ($(shell test -e versions.tf && \
      grep -q 'configuration_aliases' versions.tf \
      && echo configuration_aliases),)
    # When configuration_aliases are used, validate will always fail as the provider
    # configuration is not present in the module
    export LINT_TF_VALIDATE =
  else
    export LINT_TF_VALIDATE = terraform/validate
  endif
  
  -include $(shell curl -sSL -o .build-harness-ext \
      "https://go.sr2.uk/build-harness"; echo .build-harness-ext)
  
  ## Lint terraform code
  lint:
      $(SELF) readme/lint terraform/install terraform/get-modules terraform/lint\
          $(LINT_TF_VALIDATE) tflint
  ```
include:
  - docs/targets.md
contributors:
  - name: irl
    gitlab: irlxyz
    gitlab_id: 5895869
  - name: Abel Luck
    gitlab: abelxluck
    gravatar: 0f605397e0ead93a68e1be26dc26481a
